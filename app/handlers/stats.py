import json
import statistics
from aiogram import Router
from aiogram.types import Message
from aiogram.filters.command import Command

from ..database.requests import DatabaseManager


stats_router = Router()


from aiogram import Router
from aiogram.types import Message
from aiogram.filters.command import Command
import statistics

from ..database.requests import DatabaseManager

stats_router = Router()

@stats_router.message(Command('stats'))
async def stats(message: Message) -> None:
    db = DatabaseManager(message.from_user.id)
    stats = await db.get_statistik()

    avg_response_time = (
        int(statistics.mean(stats["time_response"][-10:])) if stats["time_response"] else 0
    )
    last_user_time = stats["user_time"][-1] if stats["user_time"] else "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    last_voice_use = stats["voice_use"][-1] if stats["voice_use"] else "–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å"
    
    # –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã
    voice_recognition = stats.get("voice_recoregtion", [])
    voice_texts = [
        f"{entry[0]} ‚Äî {entry[1]}" 
        for entry in voice_recognition 
        if isinstance(entry, list) and len(entry) == 2
    ]
    voice_texts_str = "\n".join(voice_texts) if voice_texts else "–ù–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑"

    await message.reply(
        f"""
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>

üìù –°–∏–º–≤–æ–ª–æ–≤ —é–∑–µ—Ä–∞: <code>{stats["user_chars"]}</code>
ü§ñ –°–∏–º–≤–æ–ª–æ–≤ –ú–∏—Ç—ã: <code>{stats["mita_chars"]}</code>
üìà –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: <code>{avg_response_time}</code> —Å–µ–∫

‚è± –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ: <code>{last_user_time}</code>
üéô –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞: <code>{last_voice_use}</code>

üó£ <b>–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã:</b>
{voice_texts_str}
"""
    )