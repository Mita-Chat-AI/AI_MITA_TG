from aiogram import Router, Bot
from aiogram.types import Message
from aiogram.filters.command import Command

voice_lang = Router()


@voice_lang.message(Command('voice_lang'))
async def lang_voice(message: Message):
    await message.reply(
'''
<b>üòï | –≠—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç.

‚ùì | –ü–û–ß–ï–ú–£
‚îó –ú–∏—Ç–∞ —Ç–µ–ø–µ—Ä—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–∑—ã–∫ –æ–∑–≤—É—á–∫–∏. –í–∞–º –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–≤–∞—Ç—å —ç—Ç–æ.</b>
'''
    )




@voice_lang.message(Command('gghh'))
async def get_user_info(message: Message, bot: Bot):
    # –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /gghh 8102139305
    try:
        parts = message.text.split()
        if len(parts) < 2:
            await message.answer("‚ùó –£–∫–∞–∂–∏ ID –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: /gghh 8102139305")
            return

        user_id = int(parts[1])  # –ü–æ–ª—É—á–∞–µ–º ID –∏–∑ —Ç–µ–∫—Å—Ç–∞
        chat = await bot.get_chat(user_id)

        await message.answer(
            f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n"
            f"ID: {chat.id}\n"
            f"–ò–º—è: {chat.first_name}\n"
            f"–§–∞–º–∏–ª–∏—è: {chat.last_name}\n"
            f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{chat.username if chat.username else '–ù–µ—Ç'}"
        )
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
